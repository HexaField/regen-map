name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    environment: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect lockfile
        id: lock
        run: |
          if [ -f package-lock.json ]; then
            echo "cache=npm" >> "$GITHUB_OUTPUT"
            echo "lockfile=package-lock.json" >> "$GITHUB_OUTPUT"
          else
            echo "cache=" >> "$GITHUB_OUTPUT"
            echo "lockfile=" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node (with cache)
        if: steps.lock.outputs.cache != ''
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.lock.outputs.cache }}
          cache-dependency-path: ${{ steps.lock.outputs.lockfile }}

      - name: Setup Node (no cache)
        if: steps.lock.outputs.cache == ''
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (npm ci if lockfile exists)
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build (with configurable base path)
        env:
          PUBLIC_BASE_PATH: ${{ secrets.PUBLIC_BASE_PATH }}
        run: |
          echo "Building with base path: ${PUBLIC_BASE_PATH:-/}"
          npm run build -- --base "${PUBLIC_BASE_PATH:-/}"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
